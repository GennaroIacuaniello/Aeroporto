package gui;

import controller.Controller;

import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Locale;

public class RegisterScreen {

    //Padding
    private JPanel topPadding;
    private JPanel bottomPadding;
    private JPanel leftPadding;
    private JPanel rightPadding;

    //Main scene
    private static JFrame mainFrame;
    private JPanel registerScreen;
    private JPanel registerMenu;
    private JLabel pageTitle;

    //Main fields
    private JTextField mailTextField;
    private JLabel mailLabel;
    private JTextField nickTextField;
    private JLabel nickLabel;

    private JPasswordField passwordField;
    private JLabel passwordLabel;
    private JButton registerButton;

    //Bottom options
    private JButton loginButton;
    private JLabel loginPrompt;

    public RegisterScreen(ArrayList<JFrame> callingFrames, Controller controller) {
        loginButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                new LogInScreen(callingFrames, controller);
            }
        });

        this.setMainFrame(callingFrames, controller);
        mainFrame.setVisible(true);

    }

    private void setMainFrame(ArrayList<JFrame> callingFrames, Controller controller) {
        mainFrame = new JFrame("RegisterScreen");
        callingFrames.addLast(mainFrame);
        mainFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        mainFrame.add(registerScreen);
        mainFrame.pack();
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        registerScreen = new JPanel();
        registerScreen.setLayout(new BorderLayout(0, 0));
        registerScreen.setBackground(new Color(-4934476));
        registerScreen.setForeground(new Color(-10033877));
        registerScreen.setName("");
        registerScreen.setOpaque(true);
        registerScreen.setPreferredSize(new Dimension(360, 480));
        topPadding = new JPanel();
        topPadding.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 36, 0), -1, -1));
        topPadding.setBackground(new Color(-3618596));
        registerScreen.add(topPadding, BorderLayout.NORTH);
        bottomPadding = new JPanel();
        bottomPadding.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(36, 0, 0, 0), -1, -1));
        bottomPadding.setBackground(new Color(-3618596));
        registerScreen.add(bottomPadding, BorderLayout.SOUTH);
        leftPadding = new JPanel();
        leftPadding.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 27), -1, -1));
        leftPadding.setBackground(new Color(-3618596));
        registerScreen.add(leftPadding, BorderLayout.WEST);
        rightPadding = new JPanel();
        rightPadding.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 27, 0, 0), -1, -1));
        rightPadding.setBackground(new Color(-3618596));
        registerScreen.add(rightPadding, BorderLayout.EAST);
        registerMenu = new JPanel();
        registerMenu.setLayout(new GridBagLayout());
        registerMenu.setBackground(new Color(-2302736));
        registerMenu.setEnabled(false);
        Font registerMenuFont = this.$$$getFont$$$(null, -1, -1, registerMenu.getFont());
        if (registerMenuFont != null) registerMenu.setFont(registerMenuFont);
        registerScreen.add(registerMenu, BorderLayout.CENTER);
        passwordLabel = new JLabel();
        passwordLabel.setForeground(new Color(-15461356));
        passwordLabel.setText("Password");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 5;
        gbc.gridwidth = 4;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.VERTICAL;
        gbc.insets = new Insets(16, 16, 0, 0);
        registerMenu.add(passwordLabel, gbc);
        passwordField = new JPasswordField();
        passwordField.setFocusable(true);
        passwordField.setHorizontalAlignment(10);
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 6;
        gbc.gridwidth = 4;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.BOTH;
        gbc.insets = new Insets(0, 16, 0, 16);
        registerMenu.add(passwordField, gbc);
        nickTextField = new JTextField();
        nickTextField.setAutoscrolls(true);
        nickTextField.setFocusable(true);
        nickTextField.setMaximumSize(new Dimension(2147483647, 2147483647));
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 4;
        gbc.gridwidth = 4;
        gbc.weightx = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        gbc.insets = new Insets(0, 16, 0, 16);
        registerMenu.add(nickTextField, gbc);
        nickLabel = new JLabel();
        nickLabel.setForeground(new Color(-15461356));
        nickLabel.setText("Nome Utente");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.gridwidth = 4;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.VERTICAL;
        gbc.insets = new Insets(16, 16, 0, 0);
        registerMenu.add(nickLabel, gbc);
        loginButton = new JButton();
        loginButton.setFocusable(false);
        loginButton.setHorizontalTextPosition(0);
        loginButton.setText("Log In");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 13;
        gbc.gridwidth = 4;
        gbc.anchor = GridBagConstraints.SOUTH;
        gbc.insets = new Insets(0, 0, 16, 0);
        registerMenu.add(loginButton, gbc);
        registerButton = new JButton();
        registerButton.setEnabled(false);
        registerButton.setFocusable(false);
        registerButton.setText("Register");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 7;
        gbc.gridwidth = 4;
        gbc.gridheight = 5;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.NORTH;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(64, 16, 0, 16);
        registerMenu.add(registerButton, gbc);
        loginPrompt = new JLabel();
        loginPrompt.setForeground(new Color(-15461356));
        loginPrompt.setHorizontalAlignment(0);
        loginPrompt.setHorizontalTextPosition(0);
        loginPrompt.setText("<html>Sei gi√†<br>registrato?</html>");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 12;
        gbc.gridwidth = 4;
        gbc.anchor = GridBagConstraints.SOUTH;
        gbc.insets = new Insets(0, 0, 8, 0);
        registerMenu.add(loginPrompt, gbc);
        pageTitle = new JLabel();
        Font pageTitleFont = this.$$$getFont$$$(null, Font.BOLD, 24, pageTitle.getFont());
        if (pageTitleFont != null) pageTitle.setFont(pageTitleFont);
        pageTitle.setForeground(new Color(-15132391));
        pageTitle.setHorizontalAlignment(0);
        pageTitle.setHorizontalTextPosition(0);
        pageTitle.setText("Register");
        pageTitle.setVerticalTextPosition(3);
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.gridwidth = 4;
        gbc.anchor = GridBagConstraints.NORTH;
        gbc.insets = new Insets(16, 0, 0, 0);
        registerMenu.add(pageTitle, gbc);
        mailLabel = new JLabel();
        mailLabel.setForeground(new Color(-15461356));
        mailLabel.setText("Mail");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.gridwidth = 4;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.insets = new Insets(32, 16, 0, 16);
        registerMenu.add(mailLabel, gbc);
        mailTextField = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.gridwidth = 4;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(0, 16, 0, 16);
        registerMenu.add(mailTextField, gbc);
        passwordLabel.setLabelFor(passwordField);
        nickLabel.setLabelFor(nickTextField);
        mailLabel.setLabelFor(mailTextField);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return registerScreen;
    }
}
